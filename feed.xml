<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Suhua Blog</title>
    <description>Hi, This is Suhua Blog.</description>
    <link>http://aisuhua.github.io//blog/</link>
    <atom:link href="http://aisuhua.github.io//blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 21 Sep 2015 09:18:38 +0800</pubDate>
    <lastBuildDate>Mon, 21 Sep 2015 09:18:38 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>SOAP Web 服务介绍</title>
        <description>&lt;p&gt;已经跨入 2015 年，当今最为常见的两种 Web 服务类型分别是： REST 和 SOAP 。不过，从趋势来看，越来越多人已经开始使用 REST 风格的 Web 服务。而 SOAP 大多也开始或已经转型 REST，应该说 REST 会慢慢成为主流。这篇文章不会对 REST 介绍太多，主要的重点还是介绍一下 SOAP 风格的 Web 服务。&lt;/p&gt;

&lt;h2 id=&quot;web-service-&quot;&gt;Web Service 三要素&lt;/h2&gt;

&lt;p&gt;实际上，现在说 “Web Service 三要素”应该是不算很准确了，不过这个概念一直这样沿用，而且本文我们为了更能清楚阐释 SOAP Web 服务，那么就这样定义。&lt;/p&gt;

&lt;p&gt;Web Service 的三个要素分别是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SOAP（Simple Object Access Protoco） 简单对象访问协议；&lt;/li&gt;
  &lt;li&gt;WSDL（Web Services Description Language） 网络服务描述语言；&lt;/li&gt;
  &lt;li&gt;UDDI（Universal Description Discovery and Integration）一个用来发布和搜索 WEB 服务的协议（非必须）；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SOAP 用来描述传递信息的格式规范， WSDL 用来描述如何访问具体的接口（比如它会告诉你该服务有哪些接口可以使用，参数是什么等等）， UDDI 用来管理、分发和查询 Web Service。下面我们将逐一详细介绍这三个要素，并通过结合实例来进行阐释。&lt;/p&gt;

&lt;p&gt;为了把这三个要素说得更清楚，我们将会使用一个免费的 SOAP Web 服务作为例子进行阐述。该服务只提供一个接口即：根据 QQ 号，获取 QQ 在线状态。&lt;a href=&quot;http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx&quot;&gt;查看该服务&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;soap&quot;&gt;SOAP&lt;/h2&gt;

&lt;p&gt;它是一个协议，可以简单的理解为：它定义了一个基于 XML 的可扩展消息信封格式。因为客户端与服务器进行交互，由于大家的平台和应用程序都不一样，所以大家约定都采用 SOAP 这个协议来规范交互时的需要传递的消息。&lt;/p&gt;

&lt;p&gt;请求接口时，发送的消息例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;qqCheckOnline xmlns=&quot;http://WebXml.com.cn/&quot;&amp;gt;
            &amp;lt;qqCode&amp;gt;8698053&amp;lt;/qqCode&amp;gt;
        &amp;lt;/qqCheckOnline&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接口响应时，返回的消息例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;qqCheckOnlineResponse xmlns=&quot;http://WebXml.com.cn/&quot;&amp;gt;
            &amp;lt;qqCheckOnlineResult&amp;gt;Y&amp;lt;/qqCheckOnlineResult&amp;gt;
        &amp;lt;/qqCheckOnlineResponse&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：以上例子是使用 SOAP 1.1 发送的消息，SOAP 1.2 发送的消息格式其实大同小异，具体自己&lt;a href=&quot;http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx?op=qqCheckOnline&quot;&gt;查看接口文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;下面对它结构进行详细说明。&lt;/p&gt;

&lt;h3 id=&quot;xml-&quot;&gt;XML 声明&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;该行是 XML 声明。它定义 XML 的版本 (1.0) 和所使用的编码（utf-8）。&lt;/p&gt;

&lt;h3 id=&quot;envelope-&quot;&gt;Envelope 元素&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Envelope
    xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&amp;gt;
	....
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Envelope&lt;/code&gt; 元素是 SOAP 消息的固定根元素，SOAP 协议规定的，不能变，其中 &lt;code&gt;xmlns&lt;/code&gt; 是 XML Namespace 的缩写，表示 XML 命名空间。&lt;code&gt;xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&lt;/code&gt; 是 &lt;code&gt;Envelope&lt;/code&gt;的一个属性，它表示定义个以 &lt;code&gt;soap&lt;/code&gt; 为前缀的命名空间 &lt;code&gt;http://schemas.xmlsoap.org/soap/envelope/&lt;/code&gt;，即命名空间的名字是：&lt;code&gt;http://schemas.xmlsoap.org/soap/envelope/&lt;/code&gt;，而它的前缀是 &lt;code&gt;soap&lt;/code&gt;，这样子就把 &lt;code&gt;soap&lt;/code&gt; 前缀与该命名空间进行了绑定。即任何用 &lt;code&gt;soap&lt;/code&gt; 为前缀的元素都属于该命名空间的，包括根元素 &lt;code&gt;Envelope&lt;/code&gt; 。举个例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;qqCheckOnline xmlns=&quot;http://WebXml.com.cn/&quot;&amp;gt;
            &amp;lt;qqCode&amp;gt;8698053&amp;lt;/qqCode&amp;gt;
        &amp;lt;/qqCheckOnline&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中，&lt;code&gt;Envelope&lt;/code&gt; 和 &lt;code&gt;Body&lt;/code&gt; 元素就是以 &lt;code&gt;soap&lt;/code&gt; 为前缀的，那么 &lt;code&gt;Envelope&lt;/code&gt; 和 &lt;code&gt;Body&lt;/code&gt; 元素都是属于 &lt;code&gt;http://schemas.xmlsoap.org/soap/envelope/&lt;/code&gt; 这个命名空间的。&lt;/p&gt;

&lt;p&gt;同时，SOAP 协议中规定，SOAP 消息必须使用 SOAP Envelope 命名空间，所以 &lt;code&gt;http://schemas.xmlsoap.org/soap/envelope/&lt;/code&gt; 这个命名空间是固定的不能变（注意：这里只针对 SOAP 1.1 版本，SOAP 1.2 会有所不同）。所有 SOAP 消息元素，比如：&lt;code&gt;Envelope&lt;/code&gt;、&lt;code&gt;Header&lt;/code&gt;、&lt;code&gt;Body&lt;/code&gt;、&lt;code&gt;Fault&lt;/code&gt; 也都必须属于该命名空间。&lt;/p&gt;

&lt;h3 id=&quot;body-&quot;&gt;Body 元素&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Body&amp;gt;
    &amp;lt;qqCheckOnline xmlns=&quot;http://WebXml.com.cn/&quot;&amp;gt;
        &amp;lt;qqCode&amp;gt;8698053&amp;lt;/qqCode&amp;gt;
    &amp;lt;/qqCheckOnline&amp;gt;
&amp;lt;/soap:Body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Body&lt;/code&gt; 元素里面，一般都是放一些请求和响应的内容。&lt;code&gt;qqCheckOnline&lt;/code&gt; 表示要调用的接口方法，而 &lt;code&gt;qqCode&lt;/code&gt; 就是调用该方法时，传入的参数，当然参数可以有多个。&lt;/p&gt;

&lt;p&gt;其中，&lt;code&gt;qqCheckOnline&lt;/code&gt; 元素上也定义了一个命名空间 &lt;code&gt;http://WebXml.com.cn/&lt;/code&gt;。值得注意的是，这里在定义命名空间时，并没有设置命名空间前缀（namespace prefix）。这种设置方式，会把当前元素及其所有子元素，都归属于该命名空间。&lt;a href=&quot;http://www.w3school.com.cn/xml/xml_namespaces.asp&quot;&gt;了解 XML 命名空间&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;我们看到，SOAP 消息元素和应用程序本身的元素是属于不同的命名空间，这样有利于把 SOAP 消息元素与其他元素区分开来，当然也防止了与自定义元素重名的问题。&lt;/p&gt;

&lt;h3 id=&quot;header-&quot;&gt;Header 元素&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;
    &amp;lt;soap:Header&amp;gt;
        &amp;lt;AuthenHeader xmlns=&quot;http://www.example.com&quot;&amp;gt;
            &amp;lt;sAuthenticate&amp;gt;string&amp;lt;/sAuthenticate&amp;gt;
        &amp;lt;/AuthenHeader&amp;gt;
    &amp;lt;/soap:Header&amp;gt;
    &amp;lt;soap:Body&amp;gt;
	......
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有些接口需要提供 &lt;code&gt;Header&lt;/code&gt; 元素，它和 &lt;code&gt;Body&lt;/code&gt; 信息一起发送，它一般用于身份验证等作用。例子中的 &lt;code&gt;AuthenHeader&lt;/code&gt; 和 &lt;code&gt;sAuthenticate&lt;/code&gt; 都是接口自定义的参数。&lt;/p&gt;

&lt;h3 id=&quot;fault-&quot;&gt;Fault 元素&lt;/h3&gt;

&lt;p&gt;当调用服务发生错误时，错误信息一般会被放置在 &lt;code&gt;Fault&lt;/code&gt; 元素内。例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;soap:Fault&amp;gt;
            &amp;lt;faultcode&amp;gt;soap:Client&amp;lt;/faultcode&amp;gt;
            &amp;lt;faultstring&amp;gt;Input string was not in a correct format.&amp;lt;/faultstring&amp;gt;
            &amp;lt;detail/&amp;gt;
        &amp;lt;/soap:Fault&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fault 元素内还有 &lt;code&gt;faultcode&lt;/code&gt;、&lt;code&gt;faultstring&lt;/code&gt;、&lt;code&gt;detail&lt;/code&gt;，用于描述错误信息用的。在上一篇文章：《SOAP 介绍》中已经对该知识点进行了比较详细的说明，有兴趣可以看看。&lt;/p&gt;

&lt;h2 id=&quot;wsdl&quot;&gt;WSDL&lt;/h2&gt;

&lt;p&gt;一个 XML 格式的文档。它用于描述该服务有哪些可用方法、参数的数据类型、命名空间等等信息。它的目的是让你知道该如何使用该服务，包括调用的各种细节信息。WSDL 文档通常用来辅助生成服务器和客户端代码及配置信息。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;契约先行与代码先行模式&lt;/h3&gt;

&lt;p&gt;在开发 Web Service 过程中有两种实现模式：契约先行（Contract first）模式和代码先行（Code first）模式。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;契约先行模式&lt;/strong&gt;：首要工作是定义针对这个 Web 服务的接口的 WSDL(Web Services Description Language，Web 服务描述语言 ) 文件。WSDL 文件中描述了 Web 服务的位置，可提供的操作集，以及其他一些属性。WSDL 文件也就是 Web 服务的 “契约”。“契约” 订立之后，再据此进行服务器端和客户端的应用程序开发。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;代码先行模式&lt;/strong&gt;：与契约先行模式不同，代码先行模式中，第一步工作是实现 Web 服务端，然后根据服务端的实现，用某种方法（自动生成或手工编写）生成 WSDL 文件。&lt;/p&gt;

&lt;p&gt;实际上，一个 WSDL 文件也挺复杂的，一般自己也不会去直接看这个文件，而是需要用到某个方法时，直接看该方法的调用说明就好。比如：&lt;a href=&quot;http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx?op=qqCheckOnline&quot;&gt;获得腾讯QQ在线状态&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;uddi&quot;&gt;UDDI&lt;/h2&gt;

&lt;p&gt;UDDI 是一个专门用来管理 Web 服务的地方。Web Service 服务提供商可以通过两种方式来暴露它的 WSDL 文件地址：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;注册到 UDDI 服务器，以便被人查找；&lt;/li&gt;
  &lt;li&gt;直接告诉给客户端调用者；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;是否需要注册到 UDDI 实际上是可选的，一般公司内部使用的服务，也不会注册到 UDDI。只有那些希望所有人都知道该服务的地址，才会注册到 UDDI。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;最后&lt;/h2&gt;

&lt;p&gt;这篇文章写得有点乱了，主要还是自己对 SOAP 的了解还不够，最起码我并没有真正开发过 SOAP 服务。不过没关系吧，慢慢来，文章可以随着知识的增长慢慢润色。上文其实有一些问题没有说清楚的，比如说：SOAP 服务的适合用在哪里，不适合用在哪里等等。如果你有兴趣，可以看看文章最后的几篇参考文献。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;参考文献&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=dWy5VmzeqzGhJxcTNO42FqJ1nLH3cwKfOdaJ9YfR5T3eFSPRQkP-xJQQNABi_hvBN_qNsWxj1P1U6rwvvafUOfgoZNZlGssdq48XYhjK3M91lFj1T0SucuAtavpr8ZEirrVFLzcALpol1SMG0fePmK&quot;&gt;简单对象访问协议（百度百科）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Web%E6%9C%8D%E5%8A%A1&quot;&gt;Web服务&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yeeyan.org/articles/view/jimmylee/5424&quot;&gt;PHP SOAP 扩展&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wooshn/article/details/8069087&quot;&gt;Web Service 到底是什么？&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-3&quot;&gt;其他&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;获得腾讯QQ在线状态服务：&lt;a href=&quot;http://www.webxml.com.cn/webservices/qqOnlineWebService.asmx&quot;&gt;qqCheckOnline&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;SOAP 服务调试工具：&lt;a href=&quot;http://www.soapui.org/&quot;&gt;SoapUI 5.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;XML 在线格式化工具：&lt;a href=&quot;http://www.webtoolkitonline.com/xml-formatter.html&quot;&gt;Web Toolkit Online&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 16 Sep 2015 17:18:44 +0800</pubDate>
        <link>http://aisuhua.github.io//blog/soap/2015/09/16/soap-web-service.html</link>
        <guid isPermaLink="true">http://aisuhua.github.io//blog/soap/2015/09/16/soap-web-service.html</guid>
        
        
        <category>soap</category>
        
      </item>
    
      <item>
        <title>SOAP 介绍</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;SOAP（Simple Object Access Protoco）简单对象访问协议是在分散或分布式的环境中交换信息的简单的协议，是一个基于 XML 的协议。此协议规范由 IBM、Microsoft、UserLand 和 DevelopMentor 在1998年共同提出，并得到 IBM，莲花（Lotus），康柏（Compaq）等公司的支持，于2000年提交给万维网联盟（World Wide Web Consortium；W3C）。现在，SOAP 协议规范由万维网联盟的 XML工作组维护。SOAP 1.2 版在2003年6月24日成为 W3C 的推荐版本。&lt;/p&gt;

&lt;p&gt;SOAP 协议包括以下四个部分的内容：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;SOAP 封装（envelop），封装定义了一个描述消息中的内容是什么，是谁发送的，谁应当接受并处理它以及如何处理它们的框架；&lt;/li&gt;
  &lt;li&gt;SOAP 编码规则（encoding rules），它定义了不同应用程序间交换信息时，需要使用到的数据类型；&lt;/li&gt;
  &lt;li&gt;SOAP RPC 表示（RPC representation），它定义了一个表示远程过程调用和应答的协定；&lt;/li&gt;
  &lt;li&gt;SOAP 绑定（binding），它定义 SOAP 使用哪种底层协议交换信息的协定。使用 HTTP/TCP/UDP 协议都可以；&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-1&quot;&gt;四个部分之间的关系&lt;/h3&gt;

&lt;p&gt;SOAP 消息基本上是从发送端到接收端的单向传输，但它们常常结合起来执行类似于请求 / 应答的模式。所有的 SOAP 消息都使用 XML 编码。一条 SOAP 消息就是一个包含有一个必需的 SOAP 的封装包，一个可选的 SOAP 标头（Header）和一个必需的 SOAP 体块（Body）的 XML 文档。&lt;/p&gt;

&lt;p&gt;把 SOAP 绑定到 HTTP 提供了同时利用 SOAP 的样式和分散的灵活性的特点以及 HTTP 的丰富的特征库的优点。在HTTP上传送 SOAP 并不是说 SOAP 会覆盖现有的 HTTP 语义，而是 HTTP 上的 SOAP 语义会自然的映射到 HTTP 语义。在使用 HTTP 作为协议绑定的场合中， RPC 请求映射到 HTTP 请求上，而 RPC 应答映射到 HTTP 应答。然而，在 RPC 上使用 SOAP 并不仅限于 HTTP 协议绑定。SOAP也可以绑定到TCP和UDP协议上。&lt;/p&gt;

&lt;p&gt;虽然这四个部分都作为 SOAP 的一部分，作为一个整体定义的，但他们在功能上是相交的、彼此独立的。特别的，信封（envelop）和编码规则（encoding rules）是被定义在不同的 XML 命名空间中，这样使得定义更加简单。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;语法规则&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;SOAP 消息必须用 XML 来编码；&lt;/li&gt;
  &lt;li&gt;SOAP 消息必须使用 SOAP Envelope 命名空间；&lt;/li&gt;
  &lt;li&gt;SOAP 消息必须使用 SOAP Encoding 命名空间；&lt;/li&gt;
  &lt;li&gt;SOAP 消息不能包含 DTD 引用；&lt;/li&gt;
  &lt;li&gt;SOAP 消息不能包含 XML 处理指令；&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;soap-&quot;&gt;SOAP 消息格式&lt;/h2&gt;

&lt;p&gt;SOAP 消息的格式比较简单，如下图：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/SOAP.svg/225px-SOAP.svg.png&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/SOAP.svg/225px-SOAP.svg.png&quot; alt=&quot;SOAP 消息格式&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下面是一条 SOAP 消息的基本格式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;
&amp;lt;soap:Envelope
    xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot;
    soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&amp;gt;
    &amp;lt;soap:Header&amp;gt;
        &amp;lt;!-- 消息头，可选 --&amp;gt;
    &amp;lt;/soap:Header&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;!-- 消息内容，必需 --&amp;gt;

        &amp;lt;soap:Fault&amp;gt;
            &amp;lt;!-- 错误信息，可选 --&amp;gt;
        &amp;lt;/soap:Fault&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一条 SOAP 消息就是一个普通的 XML 文档，包含如下元素：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;必需的 Envelope 元素，据此可把该 XML 文档标识为一条 SOAP 消息；&lt;/li&gt;
  &lt;li&gt;可选的 Header 元素，包含头部信息，一般用于身份验证；&lt;/li&gt;
  &lt;li&gt;必需的 Body 元素，包含所有的调用和响应信息；&lt;/li&gt;
  &lt;li&gt;可选的 Fault 元素，提供有关在处理此消息时，所发生的错误的描述信息；&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-3&quot;&gt;语法规则详解&lt;/h2&gt;

&lt;h3 id=&quot;soap-envelope&quot;&gt;SOAP Envelope&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Envelope&lt;/code&gt; 是 SOAP 消息结构的主要容器，也是 SOAP 消息的根元素，它必须出现在每个 SOAP 消息中，用于把此 XML 文档标示为一条 SOAP 消息。&lt;/p&gt;

&lt;p&gt;在 SOAP 中，使用命名空间将 SOAP 消息元素与应用程序自定义的元素区分开来，将 SOAP 消息元素的作用域限制在一个特定的区域。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Envelope
    xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;
    soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SOAP 的 &lt;code&gt;encodingStyle&lt;/code&gt; 属性用于定义在文档中使用的数据类型。此属性可出现在任何 SOAP 元素中，并会被应用到元素的内容及元素的所有子元素上。&lt;/p&gt;

&lt;h3 id=&quot;soap-header&quot;&gt;SOAP Header&lt;/h3&gt;

&lt;p&gt;这个是可选的，如果需要添加 &lt;code&gt;Header&lt;/code&gt; 元素，那么它必须是 &lt;code&gt;Envelope&lt;/code&gt; 的第一个子元素。&lt;code&gt;Header&lt;/code&gt; 还可以包含0个或多个可选的子元素，这些子元素称为 Header 项，所有的 Header 项一般来说是属于某个特定与接口相关的命名空间。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Envelope
    xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;
    soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&amp;gt;
    &amp;lt;soap:Header&amp;gt;
        &amp;lt;AuthenHeader xmlns=&quot;http://www.example.com&quot;&amp;gt;
            &amp;lt;sAuthenticate&amp;gt;string&amp;lt;/sAuthenticate&amp;gt;
        &amp;lt;/AuthenHeader&amp;gt;
    &amp;lt;/soap:Header&amp;gt;
    &amp;lt;soap:Body&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Header&lt;/code&gt; 元素用于与消息一起传输一些附加的消息，如身份验证信息等。&lt;/p&gt;

&lt;h2 id=&quot;soap-body&quot;&gt;SOAP Body&lt;/h2&gt;

&lt;p&gt;SOAP 消息的 &lt;code&gt;Body&lt;/code&gt; 元素可以包含以下任何元素：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;远程过程调用（RPC）的方法及其参数；&lt;/li&gt;
  &lt;li&gt;目标应用程序（消息接收者即接口调用者）所需要的数据；&lt;/li&gt;
  &lt;li&gt;报告故障和状态消息的 SOAP Fault；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所有 &lt;code&gt;Body&lt;/code&gt; 元素的直接子元素都称为 Body 项，所有 Body 项一般是属于某个特点的命名空间的。&lt;/p&gt;

&lt;p&gt;SOAP 请求消息例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Envelope
    xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot;
    soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;getMobileCodeInfo xmlns=&quot;http://www.example.com&quot;&amp;gt;
            &amp;lt;mobileCode&amp;gt;string&amp;lt;/mobileCode&amp;gt;
            &amp;lt;userID&amp;gt;string&amp;lt;/userID&amp;gt;
        &amp;lt;/getMobileCodeInfo&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SOAP 响应消息例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Envelope
    xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot;
    soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;getMobileCodeInfoResponse xmlns=&quot;http://www.example.com&quot;&amp;gt;
            &amp;lt;getMobileCodeInfoResult&amp;gt;string&amp;lt;/getMobileCodeInfoResult&amp;gt;
        &amp;lt;/getMobileCodeInfoResponse&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注：以上例子表示通过手机号获取手机号归属地等信息。第一个例子是请求消息，第二个例子是它的响应消息。&lt;/p&gt;

&lt;h2 id=&quot;soap-fault&quot;&gt;SOAP Fault&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Fault&lt;/code&gt; 元素用于在 SOAP 消息中传输错误及状态信息。如果 SOAP 消息中包括 &lt;code&gt;Fault&lt;/code&gt; 元素，它必须作为一个 &lt;code&gt;Body&lt;/code&gt; 的子元素出现，而且至多出现一次。&lt;code&gt;Fault&lt;/code&gt; 元素本身也包含有描述错误详细信息的子元素。它包含以下子元素：&lt;code&gt;faultcode&lt;/code&gt;，&lt;code&gt;faultstring&lt;/code&gt;，&lt;code&gt;faultactor&lt;/code&gt;，&lt;code&gt;detail&lt;/code&gt;。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;子元素&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;faultcode&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;供识别故障的代码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;faultstring&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;可供人阅读的有关故障的说明&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;faultactor&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;有关是谁引发故障的信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code&gt;detail&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;有关涉及 &lt;code&gt;Body&lt;/code&gt; 元素的应用程序专用错误信息&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;其中 &lt;code&gt;faultcode&lt;/code&gt; 是每一条错误消息都会提供的元素，它的值一般是以下错误代码之一：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;错误代码&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;VersionMismatch&lt;/td&gt;
      &lt;td&gt;无效的 SOAP Envelope 命名空间&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MustUnderstand&lt;/td&gt;
      &lt;td&gt;无法理解 &lt;code&gt;Header&lt;/code&gt; 中拥有属性 &lt;code&gt;mustUnderstand = 1&lt;/code&gt; 的子元素&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Client&lt;/td&gt;
      &lt;td&gt;消息结构错误，或包含了不正确的信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Server&lt;/td&gt;
      &lt;td&gt;服务器出现错误&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;注：以上关于 SOAP Fault 的描述不完全适用于 SOAP 1.2 版本。因为 SOAP 1.2 版本在返回错误信息时，&lt;code&gt;Fault&lt;/code&gt; 的子元素及其内容已经有所不同。具体看下面的例子：&lt;/p&gt;

&lt;p&gt;SOAP v1.1 错误消息例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Envelope
    xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; 
    soap:encodingStyle=&quot;http://www.w3.org/2001/12/soap-encoding&quot;&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;soap:Fault&amp;gt;
            &amp;lt;faultcode&amp;gt;soap:Client&amp;lt;/faultcode&amp;gt;
            &amp;lt;faultstring&amp;gt;Input string was not in a correct format.&amp;lt;/faultstring&amp;gt;
        &amp;lt;detail/&amp;gt;
    &amp;lt;/soap:Fault&amp;gt;
&amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SOAP v1.2 错误消息例子：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;soap:Envelope
    xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot;
    soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&amp;gt;
    &amp;lt;soap:Body&amp;gt;
        &amp;lt;soap:Fault&amp;gt;
            &amp;lt;soap:Code&amp;gt;
                &amp;lt;soap:Value&amp;gt;soap:Sender&amp;lt;/soap:Value&amp;gt;
            &amp;lt;/soap:Code&amp;gt;
            &amp;lt;soap:Reason&amp;gt;
                &amp;lt;soap:Text xml:lang=&quot;en&quot;&amp;gt;Input string was not in a correct format.&amp;lt;/soap:Text&amp;gt;
            &amp;lt;/soap:Reason&amp;gt;
            &amp;lt;soap:Detail/&amp;gt;
        &amp;lt;/soap:Fault&amp;gt;
    &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从以上返回结果来看，其实所返回的错误信息内容并没有太多改变，只是 XML 的元素发生了一些变化，具体还需要读者自己理解。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;本文章节有点乱，还算是把 SOAP 的基本知识点都过了一遍。接下来，我将会结合一些实例，进一步说明 SOAP 的特点以及如何使用 SOAP Web 服务。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;参考文献&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/xml/x-sisoap/&quot;&gt;浅谈 SOAP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wooshn/article/details/8145763&quot;&gt;SOAP 详解&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=dWy5VmzeqzGhJxcTNO42FqJ1nLH3cwKfOdaJ9YfR5T3eFSPRQkP-xJQQNABi_hvBN_qNsWxj1P1U6rwvvafUOfgoZNZlGssdq48XYhjK3M91lFj1T0SucuAtavpr8ZEirrVFLzcALpol1SMG0fePmK&quot;&gt;简单对象访问协议（百度百科）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/SOAP&quot;&gt;简单对象访问协议（维基百科）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/xml/xml_namespaces.asp&quot;&gt;XML 命名空间（XML Namespaces）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/JeffreySun/archive/2009/12/14/1623766.html&quot;&gt;SOAP 和 WSDL 的一些必要知识&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_3d7bed65010004vo.html&quot;&gt;WebService 笔记=&amp;gt;SOAP 消息结构 &lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-6&quot;&gt;其他&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;查询手机归属地信息服务：&lt;a href=&quot;http://webservice.webxml.com.cn/WebServices/MobileCodeWS.asmx&quot;&gt;http://webXml.com.cn&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;SOAP 服务调试工具：&lt;a href=&quot;http://www.soapui.org/&quot;&gt;SoapUI 5.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;XML 在线格式化工具：&lt;a href=&quot;http://www.webtoolkitonline.com/xml-formatter.html&quot;&gt;Web Toolkit Online&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 12 Sep 2015 01:40:44 +0800</pubDate>
        <link>http://aisuhua.github.io//blog/soap/2015/09/12/soap-brief-analysis.html</link>
        <guid isPermaLink="true">http://aisuhua.github.io//blog/soap/2015/09/12/soap-brief-analysis.html</guid>
        
        
        <category>soap</category>
        
      </item>
    
      <item>
        <title>世界，你好</title>
        <description>&lt;p&gt;想见证从菜鸟到大神的进化过程吗？在这里你将一目了然。（疯子一个）&lt;/p&gt;

&lt;p&gt;本博客主要记载一些技术性的文章，还有一些生活的体验。有人说“做技术，要有所为，有所不为”，那我就只能尽力而为吧。&lt;/p&gt;

&lt;p&gt;感谢你能够在这里停留，我会觉得很幸运 ^_^  谢谢你。&lt;/p&gt;
</description>
        <pubDate>Mon, 25 May 2015 05:15:49 +0800</pubDate>
        <link>http://aisuhua.github.io//blog/php/2015/05/25/hello-world.html</link>
        <guid isPermaLink="true">http://aisuhua.github.io//blog/php/2015/05/25/hello-world.html</guid>
        
        
        <category>php</category>
        
      </item>
    
  </channel>
</rss>
